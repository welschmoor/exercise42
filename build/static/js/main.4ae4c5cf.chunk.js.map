{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","setToken","newToken","login","credentials","App","useState","blogs","setBlogs","errorStr","setErrorStr","username","setUsername","password","setPassword","user","setUser","setBlogInput","newBlog","setNewBlog","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogService","loginHandler","event","preventDefault","loginService","setItem","stringify","setTimeout","addNewBlogHandler","e","console","log","message","onClick","clear","map","id","onSubmit","type","value","name","onChange","target","placeholder","length","url","likes","required","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ae4c5cf.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({blog}) => (\r\n  <div>\r\n    {blog.title} by {blog.author}\r\n  </div>  \r\n)\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null  // add this on top\r\nconst setToken = newToken => { token = `bearer ${newToken}` }\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = { headers: { Authorization: token }, }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\n\r\nexport default { getAll, create, setToken }","import axios from 'axios'\r\n// const baseUrl = '/api/login'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [errorStr, setErrorStr] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n  const [blogInput, setBlogInput] = useState('')\r\n\r\n  const [newBlog, setNewBlog] = useState({})\r\n\r\n  // Token Check in Local Storage. Exercise 5.2\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n\r\n\r\n  const loginHandler = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({ username, password, })\r\n      window.localStorage.setItem('loggedNoteappUser', JSON.stringify(user)) //Exercise 5.2\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorStr('Wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorStr(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={loginHandler}>\r\n      <div>\r\n        username\r\n        <input type=\"text\" value={username} name=\"Username\" onChange={({ target }) => setUsername(target.value)} />\r\n      </div>\r\n      <div>\r\n        password\r\n        <input type=\"password\" value={password} name=\"Password\" onChange={({ target }) => setPassword(target.value)} />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>\r\n  )\r\n\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.clear()\r\n    setUser(null)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs(blogs)\r\n    )\r\n  }, [])\r\n\r\n  //////////////////////////////////////////////\r\n  // Add new Blog\r\n  const addNewBlogHandler = async e => {\r\n    e.preventDefault()\r\n    console.log(\"clacked add new blog\")\r\n\r\n    try {\r\n      const response = await blogService.create(newBlog)\r\n      setBlogs([...blogs, response])\r\n      setErrorStr('')\r\n      setBlogInput('')\r\n      setNewBlog({ title: '' })\r\n    } catch (error) {\r\n      setErrorStr(error.message)\r\n      console.log(\"error in add new Blog handler\", error)\r\n    }\r\n  }\r\n\r\n  const inputHandlerNewBlog = e => {\r\n    setNewBlog({\r\n      id: blogs.length + 1,\r\n      title: e.target.value,\r\n      author: user.username,\r\n      url: \"url\",\r\n      likes: 1,  \r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        {user !== null && <div>Hello, {user.username}</div>}\r\n\r\n        <button onClick={logoutHandler}>Logout</button>\r\n      </header>\r\n\r\n      {errorStr && <div>{errorStr}</div>}\r\n      <h2>blogs</h2>\r\n      {user !== null && blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n\r\n      {user === null && loginForm()}\r\n\r\n      {user !== null && <form onSubmit={addNewBlogHandler} >\r\n        <input type=\"text\" placeholder='new blog entry' onChange={inputHandlerNewBlog} required />\r\n        <button type=\"submit\" >Submit</button>\r\n      </form>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}